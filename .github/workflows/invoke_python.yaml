name: python invocation quickstart

on:
  push:
    branches:
      - ongoing-fixes
    paths:
      - .github/workflows/invoke_python.yaml
      - invocation/python/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/invoke_python.yaml
      - invocation/python/**

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.repository_owner == 'diagridio'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: build local
        run: |
          cd invocation/python
          python -m pip install --upgrade pip
          pip install -r  ./client/requirements.txt && pip install -r ./server/requirements.txt

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: "read"
      id-token: "write"
    environment: shared-production
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_CI_ROLE }}
          aws-region: ${{ vars.AWS_CI_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: build and push client image
        working-directory: invocation/python/client
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ steps.login-ecr.outputs.registry }}/${{ vars.AWS_PUBLIC_ECR_ALIAS }}/invoke-python-client-qs .

      - name: build and push server image
        working-directory: invocation/python/server
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ steps.login-ecr.outputs.registry }}/${{ vars.AWS_PUBLIC_ECR_ALIAS }}/invoke-python-server-qs .
